The main steps of the algorithm are as follows:
    1. Read each line of the input and generate a set of rotations of that line.
    2. Sort the rotations.
    3. Unrotate and write the permuted index.
The main steps are to be expanded in the following lines.

std::list<std::string> extract_words(const std::string&);

1. Read each line of the input and generate a set of rotations of that line.
Each line is to be read and stored in a list. Let a function be defined. Its inputs are a reference to a stream (cin) and a reference to a list of strings (the list to hold the read lines). Its output is a reference to a stream (cin). Using this function, the lines can be read. After reading the lines, their rotations can be produced by means of a function whose inputs are a constant reference to the list of the lines and a reference to a list of a structure. The output of this function is a reference to a list of the structure. This structure contains the rotated lines and the initial word of the original line. The individual words of the lines must also be extracted for carrying out the rotations. This can be implemented by means of a function whose input is a constant reference to a string (the line whose words are to be extracted). The output of this function should be a reference to a list of strings (the list of the words of the input line). The three functions and the structure are to be declared in a header file. The functions are to be defined in a cpp source file. 